# Manually build deb-package.

name: Build deb binary package

on:
  workflow_dispatch:
    inputs:
      python-version:
        description: 'Specify python version'
        required: true
        default: '3.5'
      build-version:
        description: 'Specify build version'
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ github.event.inputs.python-version }}

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies to pipenv
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        pipenv install --dev
    - name: Generate pipenv lock
      run: |
        # generate dev requirements
        pipenv lock --dev --requirements > dev_requirements.txt
        # generate main requirements
        pipenv lock --requirements > requirements.txt
    - name: Install dependencies via pip
      run: |
        # installing dev requirements
        python -m pip install -r dev_requirements.txt
        # installing main requirements
        python -m pip install -r requirements.txt
    - name: List installed packages
      run: |
        python -m pip list
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # run default configuration
        flake8
    - name: Test with pytest
      run: |
        pytest
    - name: build deb package
      run: sh make_binary.sh -v ${{ github.event.inputs.build-version }}
    - uses: actions/upload-artifact@v2
      with:
        name: deb-package
        path: yapam-${{ github.event.inputs.build-version }}.deb
